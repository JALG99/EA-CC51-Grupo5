setwd("C:/RStudio Projects/EA Prueba")
hotel.booking = read.csv("./Datos/hotel_bookings.csv", header = TRUE, sep = ",")
View(hotel.booking)
head(hotel.booking, 5)
tail(hotel.booking, 5)
hotel.booking$is_canceled = as.factor(hotel.booking$is_canceled)
hotel.booking$arrival_date_year = as.factor(hotel.booking$arrival_date_year)
hotel.booking$arrival_date_week_number = as.factor(hotel.booking$arrival_date_week_number)
hotel.booking$arrival_date_day_of_month = as.factor(hotel.booking$arrival_date_day_of_month)
hotel.booking$is_repeated_guest = as.factor(hotel.booking$is_repeated_guest)
str(hotel.booking)
summary(hotel.booking)
data.limpia <-na.omit(hotel.booking)
hotel.booking$adr[hotel.booking$adr < 0]
hotel.booking$adr[hotel.booking$adr <= 0]
hotel.booking$adr[hotel.booking$adr < 0]
hotel.booking$lead_time[hotel.booking$lead_time <= 0]
names(hotel.booking$arrival_date_month)
names(hotel.booking)
summary(hotel.booking$arrival_date_month)
summary(hotel.booking$arrival_date_week_number)
summary(hotel.booking$arrival_date_day_of_month)
hotel.booking$total_of_special_requests[is.na(hotel.booking$children)]
summary(hotel.booking)
#Con summary identificamos que columnas presentan valores NAs
hotel.booking.limpio <- hotel.booking
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)] <-0
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)]
is.na(hotel.booking.limpio$children)
is.na(hotel.booking.limpio$children) == TRUE
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)]
hotel.booking = read.csv("./Datos/hotel_bookings.csv", header = TRUE, stringsAsFactors= FALSE, sep = ",")
summary(hotel.booking)
hotel.booking$is_canceled = as.factor(hotel.booking$is_canceled)
hotel.booking$arrival_date_year = as.factor(hotel.booking$arrival_date_year)
hotel.booking$arrival_date_week_number = as.factor(hotel.booking$arrival_date_week_number)
hotel.booking$arrival_date_day_of_month = as.factor(hotel.booking$arrival_date_day_of_month)
hotel.booking$is_repeated_guest = as.factor(hotel.booking$is_repeated_guest)
summary(hotel.booking)
hotel.booking$is_canceled = as.factor(hotel.booking$is_canceled)
hotel.booking$arrival_date_year = as.factor(hotel.booking$arrival_date_year)
hotel.booking$arrival_date_week_number = as.factor(hotel.booking$arrival_date_week_number)
hotel.booking$arrival_date_day_of_month = as.factor(hotel.booking$arrival_date_day_of_month)
hotel.booking$is_repeated_guest = as.factor(hotel.booking$is_repeated_guest)
hotel.booking$hotel = as.factor(hotel.booking$hotel)
hotel.booking$arrival_date_month = as.factor(hotel.booking$arrival_date_month)
hotel.booking$meal = as.factor(hotel.booking$meal)
hotel.booking$country = as.factor(hotel.booking$country)
hotel.booking$market_segment = as.factor(hotel.booking$market_segment)
hotel.booking$distribution_channel = as.factor(hotel.booking$distribution_channel)
hotel.booking$reserved_room_type = as.factor(hotel.booking$reserved_room_type)
hotel.booking$assigned_room_type = as.factor(hotel.booking$assigned_room_type)
hotel.booking$deposit_type = as.factor(hotel.booking$deposit_type)
hotel.booking$agent = as.factor(hotel.booking$agent)
hotel.booking$company = as.factor(hotel.booking$company)
hotel.booking$customer_type = as.factor(hotel.booking$customer_type)
hotel.booking$reservation_status = as.factor(hotel.booking$reservation_status)
hotel.booking$reservation_status_date = as.factor(hotel.booking$reservation_status_date)
summary(hotel.booking)
hotel.booking.limpio <- hotel.booking
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)] <- 0
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)]
icar la presencia de outliers
boxplot(hotel.booking.limpio$lead_time)$out
boxplot(hotel.booking.limpio$lead_time)$out
boxplot(hotel.booking.limpio$stays_in_weekend_nights)$out
boxplot(hotel.booking.limpio$stays_in_week_nights)$out
boxplot(hotel.booking.limpio$adults)$out
boxplot(hotel.booking.limpio$children)$out
boxplot(hotel.booking.limpio$babies)$out
boxplot(hotel.booking.limpio$lead_time)
replace_outliers <-function(x, removeNA = TRUE){
qrts <-quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
#si el outlier esta por debajo del cuartil 0.5 o por arriba de 0.95
caps <-quantile(x, probs = c(.05, .95), na.rm = removeNA)
#Calculamos el rango intercuartilico
iqr <-qrts[2]-qrts[1]
#Calculamos el 1.5 veces el rango intercuartiligo (iqr)
altura <-1.5*iqr
#reemplazamos del vector los outliers por debajo de 0.05 y 0.095
x[x<qrts[1]-altura] <-caps[1]
x[x>qrts[2]+altura] <-caps[2]
x
}
replace_outliers(hotel.booking.limpio$lead_time)
boxplot(hotel.booking.limpio$lead_time)$out
replace_outliers(hotel.booking.limpio$lead_time)
hotel.booking.limpio$lead_time <- replace_outliers(hotel.booking.limpio$lead_time)
boxplot(hotel.booking.limpio$lead_time)$out
hotel.booking.limpio$lead_time <- replace_outliers(hotel.booking.limpio$lead_time)
hotel.booking.limpio$stays_in_weekend_nights <- replace_outliers(hotel.booking.limpio$stays_in_weekend_nights)
hotel.booking.limpio$stays_in_week_nights <- replace_outliers(hotel.booking.limpio$stays_in_week_nights)
hotel.booking.limpio$adults <- replace_outliers(hotel.booking.limpio$adults)
hotel.booking.limpio$children <- replace_outliers(hotel.booking.limpio$children)
hotel.booking.limpio$babies <- replace_outliers(hotel.booking.limpio$babies)
hotel.booking.limpio$previous_cancellations <- replace_outliers(hotel.booking.limpio$previous_cancellations)
hotel.booking.limpio$booking_changes <- replace_outliers(hotel.booking.limpio$booking_changes)
hotel.booking.limpio$days_in_waiting_list <- replace_outliers(hotel.booking.limpio$days_in_waiting_list)
hotel.booking.limpio$adr <- replace_outliers(hotel.booking.limpio$adr)
hotel.booking.limpio$required_car_parking_spaces <- replace_outliers(hotel.booking.limpio$required_car_parking_spaces)
hotel.booking.limpio$total_of_special_requests <- replace_outliers(hotel.booking.limpio$total_of_special_requests)
boxplot(hotel.booking.limpio$lead_time)$out
boxplot(hotel.booking.limpio$stays_in_weekend_nights)$out
boxplot(hotel.booking.limpio$stays_in_week_nights)$out
boxplot(hotel.booking.limpio$adults)$out
hotel.booking.limpio$adults <- replace_outliers(hotel.booking.limpio$adults)
boxplot(hotel.booking.limpio$adults)$out
boxplot(hotel.booking.limpio$children)$out
boxplot(hotel.booking.limpio$babies)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
boxplot(hotel.booking.limpio$booking_changes)$out
boxplot(hotel.booking.limpio$days_in_waiting_list)$out
boxplot(hotel.booking.limpio$adr)$out
boxplot(hotel.booking.limpio$required_car_parking_spaces)$out
boxplot(hotel.booking.limpio$total_of_special_requests)$out
summary(hotel.booking)
summary(hotel.booking)
summary(hotel.booking.limpio)
boxplot(hotel.booking.limpio$lead_time)$out
boxplot(hotel.booking.limpio$stays_in_weekend_nights)$out
boxplot(hotel.booking.limpio$stays_in_week_nights)$out
boxplot(hotel.booking.limpio$adults)$out
hotel.booking.limpio$children <- replace_outliers(hotel.booking.limpio$children)
boxplot(hotel.booking.limpio$children)$out
boxplot(hotel.booking.limpio$babies)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
hotel.booking.limpio$booking_changes <- replace_outliers(hotel.booking.limpio$booking_changes)
hotel.booking.limpio$days_in_waiting_list <- replace_outliers(hotel.booking.limpio$days_in_waiting_list)
boxplot(hotel.booking.limpio$total_of_special_requests)$out
boxplot(hotel.booking.limpio$required_car_parking_spaces)$out
boxplot(hotel.booking.limpio$adr)$out
boxplot(hotel.booking.limpio$days_in_waiting_list)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
boxplot(hotel.booking.limpio$lead_time)$out
boxplot(hotel.booking.limpio$stays_in_weekend_nights)$out
boxplot(hotel.booking.limpio$stays_in_week_nights)$out
boxplot(hotel.booking.limpio$adults)$out
boxplot(hotel.booking.limpio$children)$out
boxplot(hotel.booking.limpio$babies)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
#boxplot(hotel.booking.limpio$adults)$out
#boxplot(hotel.booking.limpio$children)$out
#boxplot(hotel.booking.limpio$babies)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
boxplot(hotel.booking.limpio$booking_changes)$out
boxplot(hotel.booking.limpio$days_in_waiting_list)$out
boxplot(hotel.booking.limpio$adr)$out
boxplot(hotel.booking.limpio$required_car_parking_spaces)$out
boxplot(hotel.booking.limpio$total_of_special_requests)$out
boxplot(hotel.booking.limpio$previous_bookings_not_canceled)$out
hotel.booking.limpio$previous_bookings_not_canceled <- replace_outliers(hotel.booking.limpio$previous_bookings_not_canceled)
#boxplot(hotel.booking.limpio$previous_bookings_not_canceled)$out
boxplot(hotel.booking.limpio$previous_bookings_not_canceled)$out
source('C:/RStudio Projects/EA Prueba/Scripts/ea_script.R', encoding = 'UTF-8', echo=TRUE)
hotel.booking.limpio <- hotel.booking
boxplot(hotel.booking.limpio$adults)$out
boxplot(hotel.booking.limpio$children)$out
boxplot(hotel.booking.limpio$babies)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
boxplot(hotel.booking.limpio$previous_bookings_not_canceled)$out
boxplot(hotel.booking.limpio$booking_changes)$out
boxplot(hotel.booking.limpio$days_in_waiting_list)$out
boxplot(hotel.booking.limpio$adr)$out
boxplot(hotel.booking.limpio$required_car_parking_spaces)$out
boxplot(hotel.booking.limpio$total_of_special_requests)$out
barplot(counts, col=c("green","yellow","blue","red"), legend = c("Contrato", "Grupo", "Transitorio", "Transitorio asociado"), main = "Tipo de cliente por habitaciÃ³n reservada")
counts5 = table(hotel.booking$customer_type, hotel.booking$hotel)
barplot(counts, col=c("blue","red"), legend = c("City Hotel", "Resort Hotel"), main = "Tipo de cliente por hotel")
counts5 = table(hotel.booking$hotel, hotel.booking$customer_type)
barplot(counts, col=c("blue","red","green","yellow","black","purple","skyblue","orange","brown","gold"), legend = c("City Hotel", "Resort Hotel"), main = "Tipo de cliente por hotel")
barplot(counts5, col=c("blue","red","green","yellow","black","purple","skyblue","orange","brown","gold"), legend = c("City Hotel", "Resort Hotel"), main = "Tipo de cliente por hotel")
counts5 = table(hotel.booking$customer_type, hotel.booking$hotel)
barplot(counts5, col=c("blue","red"), legend = c("City Hotel", "Resort Hotel"), main = "Tipo de cliente por hotel")
barplot(counts5, col=c("blue","red","green","yellow","purple","orange","brown","black","skyblue"), legend = c("City Hotel", "Resort Hotel"), main = "Tipo de cliente por hotel")
counts5 = table(hotel.booking$customer_type, hotel.booking$hotel)
barplot(counts5, col=c("blue","red","green","yellow"), legend = c("Contract","Group","Trnasient","Transient-Party"), main = "Tipo de cliente por hotel")
counts6 = table(hotel.booking$reservation_status, hotel.booking$arrival_date_year)
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o")
counts6 = table(hotel.booking$reservation_status, hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'July'])
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'July'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'July'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'Agust'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'Agust'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'September'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'September'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'July'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'July'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'July'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'July'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en julio")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'June'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'June'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en junio")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'May'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'May'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en mayo")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'April'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'April'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en abril")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'March'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'March'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en marzo")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'February'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'February'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en febrero")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'January'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'January'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en enero")
counts6 = table(hotel.booking$reservation_status[hotel.booking$arrival_date_month == 'July'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'July'])
barplot(counts6, col=c("blue","red","green"), legend = c("Canceled","Check-Out","No-Show"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en julio")
counts5 = table(hotel.booking$arrival_date_year[hotel.booking$arrival_date_year == '2015'], hotel.booking$arrival_date_month[hotel.booking$arrival_date_year == '2015'])
barplot(counts5, col=c("blue","red","green","yellow"), legend = c("Contract","Group","Transient","Transient-Party"), main = "Tipo de cliente por hotel")
counts7 = table(hotel.booking$arrival_date_year[hotel.booking$arrival_date_year == '2016'], hotel.booking$arrival_date_month[hotel.booking$arrival_date_year == '2016'])
barplot(counts7, main = "Reservas por mes en el aÃ±o 2016")
counts7 = table(hotel.booking$arrival_date_year[hotel.booking$arrival_date_year == '2017'], hotel.booking$arrival_date_month[hotel.booking$arrival_date_year == '2017'])
barplot(counts7, main = "Reservas por mes en el aÃ±o 2016")
counts5 = table(hotel.booking$customer_type[hotel.booking$is_canceled == '0'], hotel.booking$hotel[hotel.booking$is_canceled == '0'])
barplot(counts5, col=c("blue","red","green","yellow"), legend = c("Contract","Group","Transient","Transient-Party"), main = "Tipo de cliente por hotel")
counts5 = table(hotel.booking$customer_type[hotel.booking$is_canceled == '1'], hotel.booking$hotel[hotel.booking$is_canceled == '1'])
barplot(counts5, col=c("blue","red","green","yellow"), legend = c("Contract","Group","Transient","Transient-Party"), main = "Tipo de cliente por hotel")
counts5 = table(hotel.booking$is_canceled, hotel.booking$hotel)
barplot(counts5, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Cantidad de reservas canceladas y no canceladas por hotel")
counts6 = table(hotel.booking$is_canceled[hotel.booking$arrival_date_month == 'July'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'July'])
barplot(counts6, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en julio")
counts6 = table(hotel.booking$is_canceled[hotel.booking$arrival_date_month == 'June'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'June'])
barplot(counts6, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en junio")
counts6 = table(hotel.booking$is_canceled[hotel.booking$arrival_date_month == 'May'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'May'])
barplot(counts6, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en mayo")
counts6 = table(hotel.booking$is_canceled[hotel.booking$arrival_date_month == 'April'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'April'])
barplot(counts6, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en abril")
counts6 = table(hotel.booking$is_canceled[hotel.booking$arrival_date_month == 'March'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'March'])
barplot(counts6, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en marzo")
counts6 = table(hotel.booking$is_canceled[hotel.booking$arrival_date_month == 'February'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'February'])
barplot(counts6, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en febrero")
counts6 = table(hotel.booking$is_canceled[hotel.booking$arrival_date_month == 'January'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'January'])
barplot(counts6, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en enero")
counts8 = table(hotel.booking$is_canceled[hotel.booking$children != 0 || hotel.booking$babies != 0], hotel.booking$arrival_date_year[hotel.booking$children != 0 || hotel.booking$babies != 0])
barplot(counts8, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Reservas que incluian niÃ±os y/o bebÃ©s")
counts8 = table(hotel.booking$is_canceled[hotel.booking$children > 0 | hotel.booking$babies > 0], hotel.booking$arrival_date_year[hotel.booking$children > 0 | hotel.booking$babies > 0])
barplot(counts8, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Reservas que incluian niÃ±os y/o bebÃ©s")
hotel.booking.analisis <- hotel.booking
hotel.booking.analisis$with_kids <- if(hotel.booking$children > 0 | hotel.booking$babies > 0){return(1)} else return(0)
hotel.booking.analisis$with_kids <- if(hotel.booking$children > 0 | hotel.booking$babies > 0){return(1)} else {return(0)}
hotel.booking.analisis$with_kids <- if(hotel.booking$children > 0 | hotel.booking$babies > 0){1} else {0}
hotel.booking.analisis$with_kids[hotel.booking$children > 0 | hotel.booking$babies > 0] <- 1
hotel.booking.analisis$with_kids[hotel.booking$children == 0 | hotel.booking$babies == 0] <- 0
hotel.booking.analisis$with_kids <- as.factor(hotel.booking.analisis$with_kids)
summary(hotel.booking.analisis)
hotel.booking.analisis$with_kids[hotel.booking$children > 0 | hotel.booking$babies > 0] <- 1
hotel.booking.analisis$with_kids[hotel.booking$children == 0 & hotel.booking$babies == 0] <- 0
hotel.booking.analisis$with_kids <- as.factor(hotel.booking.analisis$with_kids)
summary(hotel.booking.analisis)
counts8 = table(hotel.booking.analisis$with_kids, hotel.booking.analisis$arrival_date_year)
counts8 = table(hotel.booking.analisis$with_kids, hotel.booking.analisis$arrival_date_year)
barplot(counts8, col=c("blue","red"), legend = c("Sin niÃ±os","Con niÃ±os"), main = "Reservas que incluian niÃ±os y/o bebÃ©s")
hotel.booking.analisis$with_parking[hotel.booking$required_car_parking_spaces > 0] <- 1
hotel.booking.analisis$with_parking[hotel.booking$required_car_parking_spaces == 0] <- 0
hotel.booking.analisis$with_parking <- as.factor(hotel.booking.analisis$with_parking)
summary(hotel.booking.analisis)
summary(hotel.booking.analisis)
counts9 = table(hotel.booking.analisis$with_parking, hotel.booking.analisis$arrival_date_year)
barplot(counts9, col=c("blue","red"), legend = c("Sin parqueo","Con parqueo"), main = "Reservas que requerÃ­an espacio para auto")
counts9 = table(hotel.booking.analisis$with_parking, hotel.booking.analisis$arrival_date_year)
barplot(counts9, col=c("blue","red"), legend = c("Sin parqueo","Con parqueo"), main = "Reservas que requerÃ­an espacio para auto")
barplot(counts8, col=c("blue","red"), legend = c("Sin niÃ±os","Con niÃ±os"), main = "Reservas que incluian niÃ±os y/o bebÃ©s")
counts7 = table(hotel.booking$arrival_date_year[hotel.booking$arrival_date_year == '2016'], hotel.booking$arrival_date_month[hotel.booking$arrival_date_year == '2016'])
barplot(counts7, main = "Reservas por mes en el aÃ±o 2016")
counts6 = table(hotel.booking$is_canceled[hotel.booking$arrival_date_month == 'January'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'January'])
barplot(counts6, col=c("blue","red"), legend = c("No cancelada","Cancelada"), main = "Estado de la reserva mÃ¡s comÃºn por aÃ±o en enero")
counts10 = table(hotel.booking$is_canceled, hotel.booking$arrival_date_month)
barplot(counts10, col=c("blue","red"), legend = c("Cancelada","No cancelada"), main = "Cantidad de reservas cancenladas por mes")
library(MASS)
View(counts6)
counts6 = table(hotel.booking$arrival_date_month[hotel.booking$is_canceled == '0'], hotel.booking$arrival_date_year[hotel.booking$arrival_date_month == 'July'hotel.booking$is_canceled == '0'])
counts6 = table(hotel.booking$arrival_date_month[hotel.booking$is_canceled == '0'], hotel.booking$arrival_date_year[hotel.booking$is_canceled == '0'])
counts6 = table(hotel.booking$arrival_date_month[hotel.booking$is_canceled == '0'], hotel.booking$arrival_date_year[hotel.booking$is_canceled == '0'])
parcoord(counts6, c("blue","red", "green"))
counts6 = table(hotel.booking$arrival_date_year[hotel.booking$is_canceled == '0'], hotel.booking$arrival_date_month[hotel.booking$is_canceled == '0'])
parcoord(counts6, c("blue","red", "green"))
parcoord(counts6[c('January','February'),], c("blue","red", "green"))
parcoord(counts6[r('January','February'),], c("blue","red", "green"))
parcoord(counts6[c(1,2),], c("blue","red", "green"))
parcoord(counts6[c(5,8),], c("blue","red", "green"))
parcoord(counts6[,c(1,2)], c("blue","red", "green"))
parcoord(counts6[,c(5,4,8,1,9,7,6,2,12,11,10.3)], c("blue","red", "green"))
counts6 = table(hotel.booking$arrival_date_year[hotel.booking$is_canceled == '0'], hotel.booking$arrival_date_month[hotel.booking$is_canceled == '0'])
parcoord(counts6, c("blue","red", "green"))
parcoord(counts6[,c(5,4,8,1,9,7,6,2,12,11,10.3)], c("blue","red", "green"))
parcoord(counts6[c(1,2,3),c(5,4,8,1,9,7,6,2,12,11,10.3)], c("blue","red", "green"))
parcoord(counts6[c(5,4,8,1,9,7,6,2,12,11,10.3)], c("blue","red", "green"))
parcoord(counts6[c('January','February','March','April','May','June','July','August','September','October','November'.'Dicember')], c("blue","red", "green"))
parcoord(counts6[c('January','February','March','April','May','June','July','August','September','October','November','Dicember')], c("blue","red", "green"))
order.tab <- c('January','February','March','April','May','June','July','August','September','October','November','Dicember')
parcoord(counts6[order.tab], c("blue","red", "green"))
hotel.booking.limpio$children(hotel.booking.limpio$children == 10) <- 1
hotel.booking.limpio <- hotel.booking
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)] <- 0
hotel.booking.limpio$children(hotel.booking.limpio$children == 10) <- 1
hotel.booking.limpio$children(hotel.booking.limpio$children == 10) <- 1
hotel.booking.limpio$children[hotel.booking.limpio$children == 10] <- 1
hotel.booking.limpio$babies[hotel.booking.limpio$babies == 10] <- 1
hotel.booking.limpio$babies[hotel.booking.limpio$babies == 9] <- 0
hotel.booking.limpio$adr(hotel.booking.limpio$adr == -6.38) <- 6.38
View(hotel.booking.limpio)
hotel.booking.limpio$adr[hotel.booking.limpio$adr < 0] <- 6.38
View(hotel.booking.limpio)
boxplot(hotel.booking.limpio$children)$out
boxplot(hotel.booking.limpio$babies)$out
cityhotel = table(hotel.booking[hotel.booking$hotel == 'City Hotel']
cityhotel = table(hotel.booking[hotel.booking$hotel == 'City Hotel'])
cityhotel <- hotel.booking[hotel.booking$hotel == 'City Hotel']
cityhotel <- hotel.booking[hotel.booking$hotel == 'City Hotel']
cityhotel <- hotel.booking[hotel.booking$hotel == 'City Hotel']
cityhotel <- hotel.booking[hotel.booking$hotel == "City Hotel"]
cityhotel <- hotel.booking$hotel[hotel.booking$hotel == "City Hotel"]
hotel.booking.limpio <- hotel.booking
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)] <- 0
hotel.booking.limpio$adr[hotel.booking.limpio$adr < 0] <- 6.38
#Utilizamos la funciÃ³n aprendida en clase para corregir la mayorÃ­a de outliers
replace_outliers <-function(x, removeNA = TRUE){
qrts <-quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
#si el outlier esta por debajo del cuartil 0.5 o por arriba de 0.95
caps <-quantile(x, probs = c(.05, .95), na.rm = removeNA)
#Calculamos el rango intercuartilico
iqr <-qrts[2]-qrts[1]
#Calculamos el 1.5 veces el rango intercuartiligo (iqr)
altura <-1.5*iqr
#reemplazamos del vector los outliers por debajo de 0.05 y 0.095
x[x<qrts[1]-altura] <-caps[1]
x[x>qrts[2]+altura] <-caps[2]
x
}
hotel.booking.limpio$lead_time <- replace_outliers(hotel.booking.limpio$lead_time)
hotel.booking.limpio$stays_in_weekend_nights <- replace_outliers(hotel.booking.limpio$stays_in_weekend_nights)
hotel.booking.limpio$stays_in_week_nights <- replace_outliers(hotel.booking.limpio$stays_in_week_nights)
hotel.booking.limpio$adr <- replace_outliers(hotel.booking.limpio$adr)
hotel.booking.limpio$total_of_special_requests <- replace_outliers(hotel.booking.limpio$total_of_special_requests)
table(hotel.booking.limpio$required_car_parking_spaces)
hotel.booking.limpio$required_car_parking_spaces[hotel.booking.limpio$required_car_parking_spaces > 1] <- 1
table(hotel.booking.limpio$required_car_parking_spaces)
table(hotel.booking.limpio$adults)
hotel.booking.limpio$adults[hotel.booking.limpio$adults > 2] <- 2
boxplot(hotel.booking.limpio$adults)$out
table(hotel.booking.limpio$adults)
hotel.booking.limpio$adults[hotel.booking.limpio$adults < 1] <- 1
table(hotel.booking.limpio$adults)
boxplot(hotel.booking.limpio$adults)$out
hotel.booking.limpio <- hotel.booking
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)] <- 0
hotel.booking.limpio$adr[hotel.booking.limpio$adr < 0] <- 6.38
replace_outliers <-function(x, removeNA = TRUE){
qrts <-quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
#si el outlier esta por debajo del cuartil 0.5 o por arriba de 0.95
caps <-quantile(x, probs = c(.05, .95), na.rm = removeNA)
#Calculamos el rango intercuartilico
iqr <-qrts[2]-qrts[1]
#Calculamos el 1.5 veces el rango intercuartiligo (iqr)
altura <-1.5*iqr
#reemplazamos del vector los outliers por debajo de 0.05 y 0.095
x[x<qrts[1]-altura] <-caps[1]
x[x>qrts[2]+altura] <-caps[2]
x
}
hotel.booking.limpio$lead_time <- replace_outliers(hotel.booking.limpio$lead_time)
hotel.booking.limpio$stays_in_weekend_nights <- replace_outliers(hotel.booking.limpio$stays_in_weekend_nights)
hotel.booking.limpio$stays_in_week_nights <- replace_outliers(hotel.booking.limpio$stays_in_week_nights)
hotel.booking.limpio$adr <- replace_outliers(hotel.booking.limpio$adr)
hotel.booking.limpio$total_of_special_requests <- replace_outliers(hotel.booking.limpio$total_of_special_requests)
hotel.booking.limpio$required_car_parking_spaces[hotel.booking.limpio$required_car_parking_spaces > 1] <- 1
hotel.booking.limpio$adults[hotel.booking.limpio$adults > 2] <- 2
table(hotel.booking.limpio$children)
hotel.booking.limpio$children[hotel.booking.limpio$children > 2] <- 2
table(hotel.booking.limpio$children)
table(hotel.booking.limpio$babies)
hotel.booking.limpio$babies[hotel.booking.limpio$babies > 1] <- 1
table(hotel.booking.limpio$babies)
hotel.booking.limpio$previous_cancellations <- replace_outliers(hotel.booking.limpio$previous_cancellations)
hotel.booking.limpio <- hotel.booking
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)] <- 0
#Revisamos si los NAs fueron eliminados
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)]
#Corregir outliers
#Revisamos cada columna numÃ©rica para verificar la presencia de outliers
boxplot(hotel.booking.limpio$lead_time)$out
boxplot(hotel.booking.limpio$stays_in_weekend_nights)$out
boxplot(hotel.booking.limpio$stays_in_week_nights)$out
boxplot(hotel.booking.limpio$adults)$out
boxplot(hotel.booking.limpio$children)$out
boxplot(hotel.booking.limpio$babies)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
boxplot(hotel.booking.limpio$previous_bookings_not_canceled)$out
boxplot(hotel.booking.limpio$booking_changes)$out
boxplot(hotel.booking.limpio$days_in_waiting_list)$out
boxplot(hotel.booking.limpio$adr)$out
boxplot(hotel.booking.limpio$required_car_parking_spaces)$out
boxplot(hotel.booking.limpio$total_of_special_requests)$out
#En adr vemos que existe un valor negativo lo cual es imposible, por lo que en este caso lo reemplazaremos por
#el mismo valor en positivo
hotel.booking.limpio$adr[hotel.booking.limpio$adr < 0] <- 6.38
#Luego hacemos una revisiÃ³n de los datos
View(hotel.booking.limpio)
#Utilizamos la funciÃ³n aprendida en clase para corregir la mayorÃ­a de outliers
replace_outliers <-function(x, removeNA = TRUE){
qrts <-quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
#si el outlier esta por debajo del cuartil 0.5 o por arriba de 0.95
caps <-quantile(x, probs = c(.05, .95), na.rm = removeNA)
#Calculamos el rango intercuartilico
iqr <-qrts[2]-qrts[1]
#Calculamos el 1.5 veces el rango intercuartiligo (iqr)
altura <-1.5*iqr
#reemplazamos del vector los outliers por debajo de 0.05 y 0.095
x[x<qrts[1]-altura] <-caps[1]
x[x>qrts[2]+altura] <-caps[2]
x
}
#Lo aplicamos a cada columna que presentaba outliers en los que sabemos que va a funcionar
hotel.booking.limpio$lead_time <- replace_outliers(hotel.booking.limpio$lead_time)
hotel.booking.limpio$stays_in_weekend_nights <- replace_outliers(hotel.booking.limpio$stays_in_weekend_nights)
hotel.booking.limpio$stays_in_week_nights <- replace_outliers(hotel.booking.limpio$stays_in_week_nights)
hotel.booking.limpio$adr <- replace_outliers(hotel.booking.limpio$adr)
hotel.booking.limpio$total_of_special_requests <- replace_outliers(hotel.booking.limpio$total_of_special_requests)
summary(hotel.booking)
summary(hotel.booking.limpio)
#Revisamos cada columna manualmente y hacemos correciones de outliers
table(hotel.booking.limpio$required_car_parking_spaces)
hotel.booking.limpio$required_car_parking_spaces[hotel.booking.limpio$required_car_parking_spaces > 1] <- 1
table(hotel.booking.limpio$adults)
hotel.booking.limpio$adults[hotel.booking.limpio$adults > 3] <- 3
table(hotel.booking.limpio$children)
hotel.booking.limpio$children[hotel.booking.limpio$children > 2] <- 2
table(hotel.booking.limpio$babies)
hotel.booking.limpio$babies[hotel.booking.limpio$babies > 1] <- 1
table(hotel.booking.limpio$previous_cancellations)
hotel.booking.limpio$previous_cancellations[hotel.booking.limpio$previous_cancellations > 1] <- 1
table(hotel.booking.limpio$previous_cancellations)
table(hotel.booking.limpio$booking_changes)
hotel.booking.limpio$booking_changes[hotel.booking.limpio$booking_changes > 2] <- 2
table(hotel.booking.limpio$booking_changes)
table(hotel.booking.limpio$previous_bookings_not_canceled)
hotel.booking.limpio$previous_bookings_not_canceled[hotel.booking.limpio$previous_bookings_not_canceled > 1] <- 1
table(hotel.booking.limpio$previous_bookings_not_canceled)
table(hotel.booking.limpio$days_in_waiting_list)
hotel.booking.limpio$days_in_waiting_list <- replace_outliers(hotel.booking.limpio$days_in_waiting_list)
table(hotel.booking.limpio$days_in_waiting_list)
hotel.booking.limpio <- hotel.booking
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)] <- 0
#Revisamos si los NAs fueron eliminados
hotel.booking.limpio$children[is.na(hotel.booking.limpio$children)]
#Corregir outliers
#Revisamos cada columna numÃ©rica para verificar la presencia de outliers
boxplot(hotel.booking.limpio$lead_time)$out
boxplot(hotel.booking.limpio$stays_in_weekend_nights)$out
boxplot(hotel.booking.limpio$stays_in_week_nights)$out
boxplot(hotel.booking.limpio$adults)$out
boxplot(hotel.booking.limpio$children)$out
boxplot(hotel.booking.limpio$babies)$out
boxplot(hotel.booking.limpio$previous_cancellations)$out
boxplot(hotel.booking.limpio$previous_bookings_not_canceled)$out
boxplot(hotel.booking.limpio$booking_changes)$out
boxplot(hotel.booking.limpio$days_in_waiting_list)$out
boxplot(hotel.booking.limpio$adr)$out
boxplot(hotel.booking.limpio$required_car_parking_spaces)$out
boxplot(hotel.booking.limpio$total_of_special_requests)$out
#En adr vemos que existe un valor negativo lo cual es imposible, por lo que en este caso lo reemplazaremos por
#el mismo valor en positivo
hotel.booking.limpio$adr[hotel.booking.limpio$adr < 0] <- 6.38
#Luego hacemos una revisiÃ³n de los datos
View(hotel.booking.limpio)
#Utilizamos la funciÃ³n aprendida en clase para corregir la mayorÃ­a de outliers
replace_outliers <-function(x, removeNA = TRUE){
qrts <-quantile(x, probs = c(0.25, 0.75), na.rm = removeNA)
#si el outlier esta por debajo del cuartil 0.5 o por arriba de 0.95
caps <-quantile(x, probs = c(.05, .95), na.rm = removeNA)
#Calculamos el rango intercuartilico
iqr <-qrts[2]-qrts[1]
#Calculamos el 1.5 veces el rango intercuartiligo (iqr)
altura <-1.5*iqr
#reemplazamos del vector los outliers por debajo de 0.05 y 0.095
x[x<qrts[1]-altura] <-caps[1]
x[x>qrts[2]+altura] <-caps[2]
x
}
#Lo aplicamos a cada columna que presentaba outliers en los que sabemos que va a funcionar
hotel.booking.limpio$lead_time <- replace_outliers(hotel.booking.limpio$lead_time)
hotel.booking.limpio$stays_in_weekend_nights <- replace_outliers(hotel.booking.limpio$stays_in_weekend_nights)
hotel.booking.limpio$stays_in_week_nights <- replace_outliers(hotel.booking.limpio$stays_in_week_nights)
hotel.booking.limpio$adr <- replace_outliers(hotel.booking.limpio$adr)
hotel.booking.limpio$total_of_special_requests <- replace_outliers(hotel.booking.limpio$total_of_special_requests)
summary(hotel.booking)
summary(hotel.booking.limpio)
#Revisamos cada columna manualmente y hacemos correciones de outliers
table(hotel.booking.limpio$required_car_parking_spaces)
hotel.booking.limpio$required_car_parking_spaces[hotel.booking.limpio$required_car_parking_spaces > 1] <- 1
table(hotel.booking.limpio$adults)
hotel.booking.limpio$adults[hotel.booking.limpio$adults > 3] <- 3
table(hotel.booking.limpio$children)
hotel.booking.limpio$children[hotel.booking.limpio$children > 2] <- 2
table(hotel.booking.limpio$babies)
hotel.booking.limpio$babies[hotel.booking.limpio$babies > 1] <- 1
table(hotel.booking.limpio$previous_cancellations)
hotel.booking.limpio$previous_cancellations[hotel.booking.limpio$previous_cancellations > 1] <- 1
table(hotel.booking.limpio$booking_changes)
hotel.booking.limpio$booking_changes[hotel.booking.limpio$booking_changes > 2] <- 2
table(hotel.booking.limpio$previous_bookings_not_canceled)
hotel.booking.limpio$previous_bookings_not_canceled[hotel.booking.limpio$previous_bookings_not_canceled > 1] <- 1
table(hotel.booking.limpio$days_in_waiting_list)
hotel.booking.limpio$days_in_waiting_list[hotel.booking.limpio$days_in_waiting_list > 1] <- 1
table(hotel.booking.limpio$days_in_waiting_list)
